package com.PZSP2.PFIMJ.core.tests;

import com.PZSP2.PFIMJ.db.entities.*;
//import com.PZSP2.PFIMJ.repositories.IExercisesRepository;
import com.PZSP2.PFIMJ.models.ExerciseModel;
import com.PZSP2.PFIMJ.models.TestModel;
import com.PZSP2.PFIMJ.models.tests.PrintableTest;
import com.PZSP2.PFIMJ.repositories.IPoolsRepository;
import com.PZSP2.PFIMJ.repositories.ISubjectsRepository;
import com.PZSP2.PFIMJ.repositories.ITestsRepository;
import com.PZSP2.PFIMJ.seed.SeedTests;
import com.PZSP2.PFIMJ.services.ExerciseService;
import com.PZSP2.PFIMJ.services.TestExerciseService;
import com.PZSP2.PFIMJ.services.TestService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import javax.transaction.Transactional;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;


@Component
public class TestConverterTest {
//    @Autowired
//    private IExercisesRepository exrepo;
//
    @Autowired
    private IPoolsRepository prepo;

    @Autowired
    private TestService tService;

    @Autowired
    private TestExerciseService texService;

    @Autowired
    private ExerciseService exService;

//    @PostConstruct
    @Transactional
    public void init() throws Exception {
        PrintableTest examplePrintableTest = SeedTests.GetExampleTest(
                5,
                5,
                5,
                5,
                5,
                5);

        Pool pool = prepo.findAll().stream().findFirst().orElseThrow(Exception::new);
        Subject subject = pool.getSubject();

        TestModel test = TestModel.builder()
            .subjectId(subject.getId())
            .title(examplePrintableTest.getTitle())
            .description("This is example test generated by seed logic")
            .build();

        Test addedTest = tService.addTest(test);

        for (Exercise ex : examplePrintableTest.getExercises()) {
            ExerciseModel exerciseModel = ExerciseModel.builder()
                .points(ex.getPoints())
                .title(ex.getTitle())
                .poolId(pool.getId())
                .versions(ex.getVersions())
                .type(ex.getType())
                .build();

            Exercise addedExercise = exService.createExercise(exerciseModel);
            texService.addExerciseToTest(addedExercise.getId(), addedTest.getId());
        }

//        version1.setText("Oto jest pytanie");
//        Exercise exercise = new Exercise();
//
//        List<ExerciseVersion> versions = new ArrayList<>();
//        versions.add(version1);
//
//        exercise.setVersions(versions);
//        exercise.setTitle("Zadanie z geometrii2");
//        exercise.setType("PLAIN_TEXT");
//
//        Pool pool = prepo.findAll().stream().findFirst().orElse(null);
//        exercise.setPool(pool);
//
//        exrepo.save(exercise);

//
//        Test test = new Test();
//        test.setTitle("Test 1");
//        test.setDescription("Kol. 1");
//
//        List<Exercise> exerciseList = new ArrayList<>();
//        exerciseList.add(exercise);
//
//        test.setExercises(exerciseList);
//
//        // save test
//        Subject addedSubject = srepo.findSubjectByName(subject.getName()).orElse(null);
//
//        test.setSubject(addedSubject);
//        Set<Test> tests = new HashSet<>();
//        tests.add(test);
//        addedSubject.setTests(tests);
//
//        trepo.save(test);
//
//        Test addedTest = trepo.findTestByTitle(test.getTitle()).orElse(null);
//        System.out.println(addedTest.getId());
    }
}
